{"version":3,"file":"static/js/315.b808224c.chunk.js","mappings":"uPAEaA,EAAUC,EAAAA,GAAAA,EAAH,4CAIPC,EAAOD,EAAAA,GAAAA,GAAH,gDAIJE,EAAOF,EAAAA,GAAAA,EAAH,iEAKJG,EAAOH,EAAAA,GAAAA,GAAH,gDAIJI,EAAaJ,EAAAA,GAAAA,EAAH,+C,SCwBvB,EAtCgB,WACd,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,IAVAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,SAAAC,GACJN,EAAWM,EACZ,IACAC,MAAMC,QAAQC,IAClB,GAAE,CAACR,IAICF,EAIL,OACE,8BACGA,EAAQW,OAAS,GAChB,SAACd,EAAD,UACGG,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACpB,EAAD,YACE,UAACG,EAAD,WAAY,YACF,uBAAIgB,QAEd,SAACrB,EAAD,UAAUsB,MAJDF,EADA,OAUf,SAACjB,EAAD,UAAM,+CAIb,C,8LCvCKoB,EAAW,+BAEXC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,EADrB,oBADQ,cACzBG,EADyB,yBAKxBA,EAASb,MALe,2CAAH,qDASjBc,EAAe,mCAAG,WAAMR,GAAN,uFACNM,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAH,EADA,oBACcI,EADd,oBADM,cACvBG,EADuB,yBAKtBA,EAASb,MALa,2CAAH,sDASfe,EAAkB,mCAAG,WAAMT,GAAN,uFACTM,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAH,EADA,4BACsBI,EADtB,oBADS,cAC1BG,EAD0B,yBAKzBA,EAASb,KAAKgB,MALW,2CAAH,sDASlBlB,EAAe,mCAAG,WAAMQ,GAAN,uFACNM,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAH,EADA,4BACsBI,EADtB,oBADM,cACvBG,EADuB,yBAKtBA,EAASb,KAAKiB,SALQ,2CAAH,sDASfC,EAAc,mCAAG,WAAMC,GAAN,uFACLP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,kBACgCS,EADhC,oBADK,cACtBN,EADsB,yBAKrBA,EAASb,MALY,2CAAH,qD","sources":["pages/Reviews/Reviews.styled.js","pages/Reviews/Reviews.js","servises/requestApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Comment = styled.p`\n  font-size: 14px;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 10px;\n`;\n\nexport const Sory = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const List = styled.ul`\n  margin-bottom: 12px;\n`;\n\nexport const AuthorName = styled.p`\n  margin-bottom: 8px;\n`;\n","import { useEffect, useState } from 'react';\nimport { getMovieReviews } from '../../servises/requestApi';\nimport { useParams } from 'react-router-dom';\nimport { Comment, Item, Sory, List, AuthorName } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(data => {\n        setReviews(data);\n      })\n      .catch(console.log);\n  }, [movieId]);\n\n  // console.log(reviews);\n\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <List>\n          {reviews.map(({ id, author, content }) => (\n            <Item key={id}>\n              <AuthorName>\n                Author: <b>{author}</b>\n              </AuthorName>\n              <Comment>{content}</Comment>\n            </Item>\n          ))}\n        </List>\n      ) : (\n        <Sory>We don't have any reviews for this movie.</Sory>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = '4d5567e6cf5210846af05c06dd64dec1';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=eu-US`\n  );\n\n  return response.data;\n};\n// getTrendingMovies().then(data => console.log(data)); //check\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n// getMovieDetails(455476).then(data => console.log(data)); //check\n\nexport const getMovieActorsCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast;\n};\n// getMoviesActorsCast(455476).then(cast => console.log(cast)); // check\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data.results;\n};\n// getMovieReviews(385687).then(results => console.log(results));\n\nexport const getMovieSearch = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`\n  );\n\n  return response.data;\n};\n// getMovieReviews('lion').then(response => console.log(response));\n"],"names":["Comment","styled","Item","Sory","List","AuthorName","useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","then","data","catch","console","log","length","map","id","author","content","BASE_URL","API_KEY","getTrendingMovies","axios","response","getMovieDetails","getMovieActorsCast","cast","results","getMovieSearch","query"],"sourceRoot":""}